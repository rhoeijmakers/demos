<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Demo</title>
    <link>https://example.com/posts/</link>
    <description>Recent content in Posts on Demo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 12 Nov 2020 12:15:02 +0000</lastBuildDate><atom:link href="https://example.com/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Browser image support</title>
      <link>https://example.com/posts/imagesupport/</link>
      <pubDate>Thu, 12 Nov 2020 12:15:02 +0000</pubDate>
      
      <guid>https://example.com/posts/imagesupport/</guid>
      <description>Does my browser support WebP and/or AVIF A quick check to see if your browser or application supports modern image formats. WebP If the browser supports WebP the label on the image will indicate this and a green check will be shown. If the image label says WebP the browser supports the format, when the label says JPG the browser does not support and falls back on JPG. A red cross appears.</description>
    </item>
    
    <item>
      <title>SVG</title>
      <link>https://example.com/posts/svg/</link>
      <pubDate>Fri, 27 Dec 2019 21:09:45 +0100</pubDate>
      
      <guid>https://example.com/posts/svg/</guid>
      <description>Currently at the time of writing, we would recommend you to go with &amp;lt;img&amp;gt; tags as the simplest option and &amp;lt;object&amp;gt; tags only if you require interactivity in your graphics. Avoid Inline SVG in order to be indexed in Google Image.
1. SVG images 2. Img tag in object tag  3. Embedded in HTML 5 SVG tag .cls-1,.cls-2,.cls-3,.cls-4{fill:none;stroke-miterlimit:10;stroke-width:8px;}.cls-1{stroke:#52b0bf;}.cls-2{stroke:#a3cc83;}.cls-3{stroke:#e7bb03;}.cls-4{stroke:#f5a488;}.cls-5{fill:#43433d;} Embedded SVG with attribute sizing and coloring     </description>
    </item>
    
    <item>
      <title>Native lazy loading!</title>
      <link>https://example.com/posts/lazyloading/</link>
      <pubDate>Thu, 27 Dec 2018 21:09:45 +0100</pubDate>
      
      <guid>https://example.com/posts/lazyloading/</guid>
      <description> if (&#39;loading&#39; in HTMLImageElement.prototype) { // Browser supports `loading`.. console.log(&#34;Lazy&#34;); } else { // Fetch and apply a polyfill/JavaScript library // for lazy-loading instead. console.log(&#34;No Lazy&#34;); }  Lazy loading Summer Autumn Winter Spring </description>
    </item>
    
  </channel>
</rss>
